version: 2.1
orbs:
  node: circleci/node@5

jobs:
  build-library:
    # Build node project
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          cache-path: ~/project/node_modules
          override-ci-command: npm install
      - run:
          command: npm run build
      - run:
          name: Create the ~/artifacts directory if it doesn't exist
          command: mkdir -p ~/artifacts
      # Copy output to artifacts dir
      - run:
          name: Copy artifacts
          command: cp -R build dist public .output .next .docusaurus ~/artifacts 2>/dev/null || true
      - store_artifacts:
          path: ~/artifacts
          destination: node-build

  test-library:
    # Install node dependencies and run tests
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          cache-path: ~/project/node_modules
          override-ci-command: npm install
      - run:
          name: Run tests
          command: npm run test
    # any other sort of tests could be added here 

  scan-library:
    # scanning
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          cache-path: ~/project/node_modules
          override-ci-command: npm install
      - run:
          command: |
            npm audit fix --audit-level=critical --force
            npm audit --audit-level=critical
    # any other sort of scanning could be added here, also Sonarqube server could be integrated and used for code scanning

  publish-package:
    executor: node/default
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: npm install
      - run:
          name: Authenticate with npm
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
      - run:
          name: Publish to npm
          command: npm publish --access public
          environment:
            NPM_TOKEN: $NPM_TOKEN  # we need to ensure NPM_TOKEN is set in CircleCI environment variables
          # if package published with same release number, pipeline will fail and will not allow it.
          # release number should be updated in package.json file
          # A release is triggered by tagging the main branch.

  setup_sendmail:
    docker:
      - image: ubuntu:20.04
    steps:
      - run:
          name: Install Sendmail
          command: |
            apt-get update && apt-get install -y sendmail && apt-get clean
      - run:
          name: Configure Sendmail
          command: |
            echo "root: remonadly06@gmail.com" >> /etc/aliases
            newaliases  # Update aliases
      - run:
          name: Send Test Email
          command: |
            echo "Subject: Test Email" | sendmail remonadly06@gmail.com
      

workflows:
  ui-internal-library:
    jobs:
      - setup_sendmail