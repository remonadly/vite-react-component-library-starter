version: 2.1
orbs:
  node: circleci/node@5

jobs:
  build-library:
    # Build node project
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          cache-path: ~/project/node_modules
          override-ci-command: npm install
      - run:
          command: npm run build
      - run:
          name: Create the ~/artifacts directory if it doesn't exist
          command: mkdir -p ~/artifacts
      # Copy output to artifacts dir
      - run:
          name: Copy artifacts
          command: cp -R build dist public .output .next .docusaurus ~/artifacts 2>/dev/null || true
      - store_artifacts:
          path: ~/artifacts
          destination: node-build

  test-library:
    # Install node dependencies and run tests
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          cache-path: ~/project/node_modules
          override-ci-command: npm install
      - run:
          name: Run tests
          command: npm run test
    # any other sort of tests could be added here to avoid having broken components or missing dependency or many other problems.


  scan-library:
    # scanning
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          cache-path: ~/project/node_modules
          override-ci-command: npm install
      - run:
          command: |
            npm audit fix --audit-level=critical --force
            npm audit --audit-level=critical
    # any other sort of scanning could be added here, also Sonarqube server could be integrated and used for code scanning

  publish-package:
    executor: node/default
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: npm install
      - run:
          name: Authenticate with npm
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
      - run:
          name: Publish to npm
          command: npm publish --access public
          environment:
            NPM_TOKEN: $NPM_TOKEN  # we need to ensure NPM_TOKEN is set in CircleCI environment variables
          # if package published with same release number, pipeline will fail and will not allow it.
          # release number should be updated in package.json file
          # A release is triggered by tagging the main branch.
      - run:
          name: Send Slack Notification # A slack notification is sent that new library is published
          command: |
            curl -X POST -H 'Content-type: application/json' --data '{
              "text": "A new React library version has been published to npm!"
            }' $SLACK_WEBHOOK_URL
          # need to create a slack webhook for the desired slack channel and add it as environment variable to circleci before using here

  # to send notification mail stating that new version has been published
  send_notification_mail:
    docker:
      - image: alpine:latest
    steps:
      - run:
          name: Install mailx
          command: |
            apk add --no-cache heirloom-mailx  
          # install heirloom-mailx package
      - run:
          name: Configure SMTP for mailx 
          # configure SMTP server to be able to send mails
          command: |
            echo "set smtp=smtp://smtp.example.com:587" > ~/.mailrc
            echo "set smtp-auth=login" >> ~/.mailrc
            echo "set smtp-auth-user=your_email@example.com" >> ~/.mailrc
            echo "set smtp-auth-password=${SMTP_PASSWORD}" >> ~/.mailrc 
          # SMTP_Password should be kept as environment variable in CircleCi settings to avoid hardcoding sensitive information
            echo "set from=your_email@example.com" >> ~/.mailrc
            echo "set ssl-verify=ignore" >> ~/.mailrc
            chmod 600 ~/.mailrc
      - run:
          name: Send Email
          command: |
            version=$(node -p "require('./package.json').version") 
            echo "New UI Library version $version has been released. Please update your dependencies." | mailx -s "Notification Email" recipient@example.com
      # got the new current version and send notification mail with it

workflows:
  ui-internal-library:
    jobs:
      - build-library
      - test-library:
          requires:
            - build-library
      - scan-library:
          requires:
            - build-library
      - publish-package:
          requires:
            - test-library
            - scan-library
#     - send_notification_mail
